@model ThoughtBox.App.ViewModels.ThoughtViewModel

<h4 class="text-center">A safe place to share!</h4>

<div class="row">
    @{ var counter = 1; }
    @foreach (var item in Model.Thoughts)
    {
        counter++;
        if (counter % 2 == 0)
        {
            <div class="col-sm-12 col-lg-5 offset-lg-1 mt-2 mb-2">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Thought <a asp-action="GetSpecificThought" asp-route-id="@item.Id">#@item.Id</a></h5>
                        <h6 class="card-subtitle mb-2 text-muted">@item.CreatedAt.Humanize()</h6>
                        <p class="card-text">@item.Content</p>
                        <p>Views: @item.Views</p>
                        <p>
                            @foreach (var tag in item.Tags.Split(item.TagsDelimiter))
                            {
                                <span class="badge badge-dark">@tag.Trim()</span>
                            }
                        </p>
                    </div>
                </div>
            </div>
            continue;
        }
        <div class="col-sm-12 col-lg-5 mt-2 mb-2">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Thought <a asp-action="GetSpecificThought" asp-route-id="@item.Id">#@item.Id</a></h5>
                    <h6 class="card-subtitle mb-2 text-muted">@item.CreatedAt.Humanize()</h6>
                    <p class="card-text">@item.Content</p>
                    <p>Views: @item.Views</p>
                    <p>
                        @foreach (var tag in item.Tags.Split(item.TagsDelimiter))
                        {
                            <span class="badge badge-dark">@tag.Trim()</span>
                        }
                    </p>
                </div>
            </div>
        </div>
    }
</div>

@{
    var pages = 1;
    if (Model.TotalThoughts < Model.PageSize)
    {
        pages = 1;
    }
    pages = Model.TotalThoughts / Model.PageSize;
    if (Model.TotalThoughts % Model.PageSize >= 1)
    {
        pages++;
    }

    bool isPrevDisabled = Model.CurrentPage <= 1;
    bool isNextDisabled = Model.CurrentPage >= pages;
}

<nav aria-label="..." class="mt-3">
    <ul class="pagination flex-row justify-content-center">
        <li class="@(isPrevDisabled ? "page-item disabled" : "page-item")">
            <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage-1)" tabindex="-1">Previous</a>
        </li>
        @for (int i = 1; i <= pages; i++)
        {
            @if (Model.CurrentPage == i)
            {
                <li class="page-item active">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i <span class="sr-only">(current)</span></a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }
        }
        <li class="@(isNextDisabled ? "page-item disabled" : "page-item")">
            <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage+1)">Next</a>
        </li>
    </ul>
</nav>