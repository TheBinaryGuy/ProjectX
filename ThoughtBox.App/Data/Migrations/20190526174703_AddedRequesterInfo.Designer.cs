// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThoughtBox.App.Data;

namespace ThoughtBox.App.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190526174703_AddedRequesterInfo")]
    partial class AddedRequesterInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ThoughtBox.App.Models.DataProtectionKey", b =>
                {
                    b.Property<string>("FriendlyName")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("XmlData");

                    b.HasKey("FriendlyName");

                    b.ToTable("DataProtectionKeys");
                });

            modelBuilder.Entity("ThoughtBox.App.Models.RequesterInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IP");

                    b.Property<int>("ThoughtId");

                    b.HasKey("Id");

                    b.HasIndex("ThoughtId");

                    b.ToTable("RequesterInfo");
                });

            modelBuilder.Entity("ThoughtBox.App.Models.Thought", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("Tags")
                        .IsRequired();

                    b.Property<string>("TagsDelimiter")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<long>("Views");

                    b.HasKey("Id");

                    b.ToTable("Thoughts");
                });

            modelBuilder.Entity("ThoughtBox.App.Models.RequesterInfo", b =>
                {
                    b.HasOne("ThoughtBox.App.Models.Thought", "Thoughts")
                        .WithMany()
                        .HasForeignKey("ThoughtId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
